<% include ../sub/header %>
      <% include ../sub/admin_menu %>
      
      <div class="admin_right">
        <div class="body">
          <div class="title" style="width:100%;">
            <h1>휴일</h1>
            <p>학습관 또는 각 강의실에 휴일을 설정해주세요</p>
          </div>
          <div class="holiday_left">
            <form v-on:submit="onSubmitForm">
              <div class="single_input_body">
                  <div class="pack_div clearfix">
                    <div class="div_left">
                      <label>강의실</label>
                    </div>
                    <div class="div_right">
                      <p v-if="mod != 'POST'">{{ displayName }}</p>
                      <select v-else class="form-control" v-model="formData.room_id" @change="onChangeRoom()">
                        <option :value="0">{{building.name}}</option>
                        <option v-for="(room, i) in results" v-bind:value="room.room_id" :key="i">
                          {{ room.name }}
                        </option>
                      </select>
                    </div>
                  </div>
  
                  <div class="pack_div clearfix">
                    <div class="div_left">
                      <label>시작일</label>
                    </div>
                    <div class="div_right">
                      <p v-if="mod == 'GET'">{{ displayStartDate }}</p>
                      <custom-datepicker
                        v-else
                        :inline="false"
                        :selected_date="formData.start_date"
                        :default_date="formData.start_date || new Date()"
                        :on-selected="onSelectedStartDate"
                        :clear_button="true"
                        :not_holiday="true"
                      ></custom-datepicker>
                    </div>
                  </div>
  
                  <div class="pack_div clearfix">
                    <div class="div_left">
                      <label>종료일</label>
                    </div>
                    <div class="div_right">
                      <p v-if="mod == 'GET'">{{ displayEndDate }}</p>
                      <custom-datepicker
                        v-else
                        :inline="false"
                        :selected_date="formData.end_date"
                        :default_date="formData.end_date  || new Date()"
                        :on-selected="onSelectedEndDate"
                        :clear_button="true"
                        :not_holiday="true"
                      ></custom-datepicker>
                    </div>
                  </div>
  
                  
                  <div class="pack_div clearfix">
                    <div class="div_left">
                      <label>이름</label>
                    </div>
                    <div class="div_right">
                      <p v-if="mod == 'GET'">{{ formData.name }}</p>
                      <input v-else type="text" class="form-control" v-model="formData.name" placeholder="이름을 입력해주세요">
                    </div>
                  </div>
  
                  <div class="pack_div clearfix">
                    <div class="div_left">
                      <label>공휴일</label>
                    </div>
                    <div class="div_right">
                      <p v-if="mod == 'GET'">{{ formData.is_public_holiday == 1 ? '공휴일' : '기타' }}</p>
                      <template v-else>
                        <div class="text-left">
                          <span>공휴일</span>
                          <input class="radio" type="radio" :value="1" v-model="formData.is_public_holiday" :checked="formData.is_public_holiday == 1">
                        </div>
                        <div class="text-left">
                          <span>기타</span>
                          <input class="radio" type="radio" :value="0" v-model="formData.is_public_holiday" :checked="formData.is_public_holiday == 0">
                        </div>
                      </template>
                    </div>
                  </div>
  
                <div class="single_button">
                  <button v-if="mod == 'GET'" type="button" class="btn btn-warning" @click="setMod('PUT', $event)">수정</button>
                  <button v-if="mod == 'GET'" type="button" class="btn btn-danger" @click="deleteHoliday">삭제</button>
                  <button v-if="mod != 'GET'" type="submit" class="btn btn-primary">제출</button>
                </div>
              </div>
            </form>
          </div>
  
          <div class="holiday_right">
            <custom-datepicker
              :reload_holiday="reload_holiday"
              :inline="true"
              :is_holidaypage="true"
              :default_date="new Date()"
              :building_id="building.building_id"
              :room_id="formData.room_id"
              :on-selected="onSelected"
              :on-disable-selected="onDisableSelected"
            ></custom-datepicker>
          </div>
        </div>
      </div>
    </main>

    <footer>
      <% include ../sub/footer %>
    </footer>
  </div>

  
  <script type="text/javascript" src="/javascripts/validate.js"></script>
  <% include ../component/datepicker %>
  <script>
    var global = makeGlobal();
    var results = <%-JSON.stringify(results) %>;
    var building = <%-JSON.stringify(building) %>;
    var app = new Vue({
      el: '#app',
      data: function () {
        return {
          header_menu_name: global.getHeaderMenuName("<%-pagename %>"),
          admin_menu_name: global.getAdminMenuName("<%-pagename %>"),
          is_user: <%- is_user %>,
          is_admin: <%- is_admin %>,
          mod: 'POST',
          results: results,
          building: building,
          reload_holiday: true,
          formData: {
            building_id: building.building_id,
            holiday_id: null,
            room_id:0,
            start_date: null,
            end_date: null,
            name: '',
            is_public_holiday: 1,
          }
        }
      },
      methods: {
        setMod: function(mod, e) {
          e.preventDefault();

          this.mod = mod;
        },
        reload: function() {
          this.reload_holiday = !this.reload_holiday;
          this.resetFormData();
        },
        deleteHoliday: function() {
          var conf = confirm("정말 삭제하시겠습니까?");
          if (conf && this.formData.holiday_id) {
            var __this = this;
            global.ajax({
              url: '/api/holiday/'+ this.formData.holiday_id,
              type: 'DELETE',
            },
            function (data, status) {
              alert(data.message);
              __this.reload();
            },
            function (message, status, data) {
              alert(message);
            });
          }
        },
        onSubmitForm: function(e) {
          e.preventDefault();
          var _validate = validate(this.formData, {
            'start_date': {
              is_require: true,
            },
            'end_date': {
              is_require: true,
            },
            'name': {
              is_require: true,
            },
            'is_public_holiday': {
              is_require: true,
            },
          });
          if (_validate) {
            alert(_validate)
          } else if(dateDiff(this.formData.start_date, this.formData.end_date) < 0) {
            alert('시작/종료일을 다시 선택해주세요')
          } else {
            var __this = this;
            var mod = this.formData.holiday_id != null ? 'PUT' : 'POST'
            var url = '/api/holiday' + (mod == 'PUT' ? '/'+ this.formData.holiday_id : '');
            global.ajax({
              url: url,
              type: mod,
              data: this.formData,
            },
            function (data, status) {
              alert(data.message);
              __this.reload();
            },
            function (message, status, data) {
              alert(message);
            });
          }
        },
        onChangeRoom: function(index) {
          this.resetFormData();
        },
        resetFormData: function() {
          this.mod = 'POST';
          this.formData.holiday_id = null;
          this.formData.start_date = null;
          this.formData.end_date = null;
          this.formData.name = '';
          this.formData.is_public_holiday = 1;
        },
        onSelected: function(date) {
          this.resetFormData();
        },
        onSelectedStartDate: function(date) {
          this.formData.start_date = date;
        },
        onSelectedEndDate: function(date) {
          this.formData.end_date = date;
        },
        onDisableSelected: function(params) {
          if (this.formData.holiday_id == params.holiday_id) {
            this.resetFormData();
          } else {
            this.mod = 'GET';
            this.formData.holiday_id = params.holiday_id;
            this.formData.room_id = params.room_id || 0;
            this.formData.start_date = params.start_date;
            this.formData.end_date = params.end_date;
            this.formData.name = params.name;
            this.formData.is_public_holiday = params.is_public_holiday;
          }
        }
      },
      computed: {
        displayName: function() {
          var name = this.building.name;
          if (this.formData.room_id != 0) {
            for (var i = 0; i < this.results.length; i ++) {
              if (this.results[i].room_id == this.formData.room_id)
                return results[i].name;
            }
          }
          return name;
        },
        displayStartDate: function() {
          return global.parseDate(this.formData.start_date)
        },
        displayEndDate: function() {
          return global.parseDate(this.formData.end_date)
        },
      }
    })

    function dateDiff(start_date, end_date)  {
      var diffDate_1 = start_date instanceof Date ? start_date : new Date(start_date);
      var diffDate_2 = end_date instanceof Date ? end_date : new Date(end_date);
      diffDate_1 = new Date(diffDate_1.getFullYear(), diffDate_1.getMonth() + 1, diffDate_1.getDate());
      diffDate_2 = new Date(diffDate_2.getFullYear(), diffDate_2.getMonth() + 1, diffDate_2.getDate());

      var diff = diffDate_2.getTime() - diffDate_1.getTime();
      diff = Math.ceil(diff / (1000 * 3600 * 24));

      return diff;
    }
  </script>

</body>

</html>