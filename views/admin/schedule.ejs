<% include ../sub/header %>
      <% include ../sub/admin_menu %>
      
      <div class="admin_right">
        <div class="single_input_body">
          <div class="pack_div clearfix">
            <div class="div_left">
              <label>학습관</label>
            </div>
            <div class="div_right">
              <p>{{ building.name }}</p>
            </div>
          </div>

          <div class="pack_div clearfix">
            <div class="div_left">
              <label>요일</label>
            </div>
            <div class="div_right">
              <select  class="form-control" v-model="formData.day_of_the_week"  @change="chageDayOfTheWeek">
                <option v-for="(item, i) in day_of_the_week_results" v-bind:value="item.day_of_the_week"
                  :selected="formData.day_of_the_week == item.day_of_the_week" :key="i">
                  {{ item.name }}
                </option>
              </select>
            </div>
          </div>
    
          <div class="form-inline pack_div clearfix" v-if="formData.day_of_the_week != null">
            <div class="div_left">
              <label>타임블럭</label>
            </div>
            <div class="div_right">
              <div class="block" v-for="(available_time, i) in available_time_list">
                <button
                class="btn btn-default"
                v-bind:value="available_time.available_time_id" 
                :key="i"
                disabled
                >{{available_time.start_time}} ~ {{available_time.end_time}}</button>
                <button 
                type="button" 
                class="btn btn-danger" 
                @click="deleteAvailableTime(i)"
                >-</button>
              </div>
              <custom-timepicker
                :add-time="addTime"
              ></custom-timepicker>
            </div>
          </div>
        </div>
      </div>
      
    </main>

    <footer>
      <% include ../sub/footer %>
    </footer>
  </div>

  
  <% include ../component/timepicker %>
  <script>
    var global = makeGlobal();
    var building = <%-JSON.stringify(building) %>;
    var app = new Vue({
      el: '#app',
      data: function () {
        return {
          header_menu_name: global.getHeaderMenuName("<%-pagename %>"),
          admin_menu_name: global.getAdminMenuName("<%-pagename %>"),
          is_user: <%- is_user %>,
          is_admin: <%- is_admin %>,
          building: building,
          day_of_the_week_results: [
            {
              day_of_the_week: 0,
              name: '일',
            },
            {
              day_of_the_week: 1,
              name: '월',
            },
            {
              day_of_the_week: 2,
              name: '화',
            },
            {
              day_of_the_week: 3,
              name: '수',
            },
            {
              day_of_the_week: 4,
              name: '목',
            },
            {
              day_of_the_week: 5,
              name: '금',
            },
            {
              day_of_the_week: 6,
              name: '토',
            },
          ],
          available_time_list: [],
          formData: {
            day_of_the_week: null,
          },
        }
      },
      methods: {
        chageDayOfTheWeek: function() {
          this.getAvailableTime();
        },
        addTime: function(start_time, end_time) {
          var available_time_list = this.available_time_list;
          var flag = false;
          var start = new Date('1970/1/1 ' + start_time);
          var end = new Date('1970/1/1 ' + end_time);
          for (var i = 0; i < available_time_list.length; i++) {
            var _start = new Date('1970/1/1 ' + available_time_list[i].start_time);
            var _end = new Date('1970/1/1 ' + available_time_list[i].end_time);
            if (_start < end && _end > start) {
              flag = true;
            }
          }
          
          if (flag) {
            alert('겹치는 시간을 확인해주세요');
          } else {
            this.available_time_list.push({
              start_time: start_time,
              end_time: end_time,
            });
            global.sortByKey(this.available_time_list, 'start_time');
          }
        },

        deleteAvailableTime: function(index) {
          this.available_time_list.splice(index, 1)
        },
        getAvailableTime: function() {
          var __this = this;
          global.ajax({
            url: '/api/available_time' + global.serializeQuery({
              building_id: this.building.building_id,
              day_of_the_week: this.formData.day_of_the_week,
            }),
            type: 'GET',
          },
          function (data, status) {
            __this.available_time_list = data.results;
          },
          function (message, status, data) {
            alert(message);
          });
        },
      }
    })
  </script>

</body>

</html>