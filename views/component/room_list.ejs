<script type="text/x-template" id="list-template">
  <div class="lookup_body">
    <div class="lookup_select">
      <div class="pack_div clearfix">
        <template v-if="!is_adminpage">
          <div class="select_div">
            <div class="div_l">
              <label>캠퍼스</label>
            </div>
            <div class="div_r">
              <select v-model="query.campus_id" class="form-control" @change="replaceBuildings($event)">
                <option 
                  v-for="(campus, i) in campus_results"
                  v-bind:value="campus.campus_id"
                  :selected="query.campus_id == campus.campus_id" 
                  :key="i">
                {{campus.name}}
                </option>
              </select>
            </div>
          </div>
          <div class="select_div">
            <div class="div_l">
              <label>학습관</label>
            </div>
            <div class="div_r">
              <select v-model="query.building_id" class="form-control" @change="refresh" :disabled="!query.campus_id">
                <option 
                  v-for="(building, i) in building_results"
                  v-bind:value="building.building_id"
                  :selected="query.building_id == building.building_id" 
                  :key="i">
                {{building.name}}
                </option>
              </select>
            </div>
          </div>
        </template>
        <div class="select_div">
          <div class="div_l">
            <label>층</label>
          </div>
          <div class="div_r">
            <select v-model="query.floor" class="form-control" @change="refresh">
              <option v-bind:value="0" :selected="query.floor==0">전체</option>
              <option 
                v-for="(floor, i) in floor_results"
                v-bind:value="floor.floor"
                :selected="query.floor == floor.floor" 
                :key="i">
              {{floor.floor}}
              </option>
            </select>
          </div>
        </div>

        <div class="select_div">
          <div class="div_l">
            <label>카테고리</label>
          </div>
          <div class="div_r">
            <select v-model="query.room_category_id" class="form-control" @change="refresh">
              <option v-bind:value="0" :selected="query.room_category_id==0">전체</option>
              <option 
                v-for="(room_category, i) in room_category_results"
                v-bind:value="room_category.room_category_id"
                :selected="query.room_category_id == room_category.room_category_id" 
                :key="i">
              {{room_category.name}}
              </option>
            </select>
        </div>
        </div>
      </div>
    </div>
    <table class="table table-striped">
      <thead>
        <tr>
          <th>카테고리</th>
          <th>호실(층)</th>
          <th>이름</th>
          <th>{{ is_adminpage ? '관리' : '자세히보기'}}</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="(room, i) in results" :key="i"> 
          <td> {{ room.room_category_name }}</td>
          <td> {{ room.room_number }}</td>
          <td> {{ room.name }} </td>
          <td> 
            <button type="button" class="btn btn-default" @click="gotoSingle(room.room_id)">
              조회
            </button>
          </td>
        </tr>
      </tbody>
    </table>
    <div class="lookup_button" v-if="is_adminpage">
      <button type="button" class="btn btn-primary"  @click="gotoWrite">생성</button>
    </div>
    <nav>
      <ul class="pagination">
        <li v-for="page in pagenation" :key="page.value" :class="{active: page.isSelf}">
          <a @click="chagePage(page.value)" aria-label="Previous">
            <span aria-hidden="true" v-html="page.name"></span>
          </a>
        </li>
      </ul>
    </nav>
  </div>
</script>

<script>
  Vue.component('room-list', {
    template: '#list-template',
    props: {
      is_user: Boolean,
      is_admin: Boolean,
      is_adminpage: Boolean,
      results: Boolean,
      list_count: Number,
      query: Object,
      params: Object,
      building_id: Number,
      campus_id: Number,
      room_category_results: Array,
      campus_results: Array,
      buildings: Array,
    },
    data: function () {
      return {
        floor_results: [],
        building_results: [],
      }
    },
    methods: {
      refresh: function () {
        this.query.floor = this.query.floor || undefined;
        this.query.room_category_id = this.query.room_category_id || undefined;
        location.href = (this.is_adminpage ? '/admin' : '') + '/room/lookup' + global.serializeQuery(this.query)
      },
      gotoSingle: function(room_id) {
        location.href= (this.is_adminpage ? '/admin' : '') + '/room/single/' + room_id
      },
      gotoWrite: function () {
        location.href = '/admin/room/write'
      },
      chagePage: function (page) {
        this.query.page = page;
        this.refresh();
      },
      replaceBuildings: function (event) {
        this.building_results = this.buildings[this.query.campus_id];
        console.log(this.building_results)
        if (event) {
          this.query.building_id = null;
        }
      },
      getFloorResults: function (building_id) {
        var __this = this;
        global.ajax({
            url: '/api/room/floor/' + building_id,
            type: 'GET',
          },
          function (data, status) {
            __this.floor_results = data.results;
          },
          function (message, status, data) {
            alert(message);
          });
      },
    },
    computed: {
      pagenation: function () {
        return pagenation({
          numberOfItems: this.list_count,
          itemsPerPage: 10,
          pagesPerNav: 5,
          indexOfPage: this.query.page,
          hasPrevAndNext: true,
          prevText: '&laquo;',
          nextText: '&raquo;',
        })
      },
    },
    created: function () {
      if (this.campus_id && this.query.campus_id == null) {
        this.query.campus_id = this.campus_id;
      }
      console.log(this.building_id)
      if (this.building_id && this.query.building_id == null) {
        this.query.building_id = this.building_id;
      }
      var building_id = this.is_adminpage ? this.building_id : this.query.building_id;
      if (building_id) {
        this.getFloorResults(building_id);
      }
      if (this.query.campus_id) {
        this.replaceBuildings();
      }
    },
  })
</script>