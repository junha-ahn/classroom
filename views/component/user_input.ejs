<script type="text/x-template" id="input-template">
  <form class="form-lnline" v-on:submit.prevent="onSubmitForm">
    <div class="single_input_body">
    
      <div class="pack_div clearfix" v-if="is_adminpage">
        <div class="div_left">
          <label>권한</label>
        </div>
        <div class="div_right">
          <p v-if="mod != 'GET'">{{ user.user_type ==  global.ADMIN_TYPE ? '관리자' : '유저' }}</p>
          <template  v-else>
            <button type="button" @click="changeToUser(user)" :class="classIsPrimary(user.user_type == global.USER_TYPE)">유저</button>
            <button type="button" @click="changeToAdmin(user)" :class="classIsPrimary(user.user_type ==  global.ADMIN_TYPE)">관리자</button>
          </template>
        </div>
      </div>

      <div class="pack_div clearfix">
        <div class="div_left">
          <label>학과</label>
        </div>
        <div class="div_right">
          <template v-if="mod=='GET'">
            <p>{{ user.department_name  }}</p>
          </template>
          <select v-else class="form-control" v-model="user.department_id">
            <option v-for="(department, i) in department_results" v-bind:value="department.department_id" :key="i">
              {{ department.name }}
            </option>
          </select>
        </div>
      </div>
      
      <div class="pack_div clearfix">
        <div class="div_left">
          <label>캠퍼스</label>
        </div>
        <div class="div_right">
          <template v-if="mod=='GET'">
            <p>{{ user.campus_name  }}</p>
          </template>
          <select v-else class="form-control" v-model="user.campus_id"  @change="replaceBuildings()">
            <option v-for="(campus, i) in campus_results" v-bind:value="campus.campus_id" :key="i">
              {{ campus.name }}
            </option>
          </select>
        </div>
      </div>

      <div class="pack_div clearfix">
        <div class="div_left">
          <label>학습관</label>
        </div>
        <div class="div_right">
          <template v-if="mod=='GET'">
            <p>{{ user.building_name  }}</p>
          </template>
          <select v-else class="form-control" v-model="user.building_id">
            <option v-for="(building, i) in building_results" v-bind:value="building.building_id" :key="i">
              {{ building.name }}
            </option>
          </select>
        </div>
      </div>

      <div class="pack_div clearfix">
        <div class="div_left">
          <label>학생/교직원</label>
        </div>
        <div class="div_right">
          <template v-if="mod=='GET'">
            <p>{{ user.is_student == 1 ? '학생' : '교직원' }}</p>
          </template>
          <template v-else>
            <div class="text-left">
              <span>학생</span>
              <input class="radio" type="radio" :value="1" v-model="user.is_student" :checked="user.is_student == 1">
            </div>
            <div class="text-left">
              <span>교직원</span>
              <input class="radio" type="radio" :value="0" v-model="user.is_student" :checked="user.is_student == 0">
            </div>
          </template>
        </div>
      </div>

      <div class="pack_div clearfix">
        <div class="div_left">
          <label>이메일</label>
        </div>
        <div class="div_right">
          <p>{{ user.email }}</p>
        </div>
      </div>

      <div class="pack_div clearfix">
        <div class="div_left">
          <label>이름</label>
        </div>
        <div class="div_right">
          <template v-if="mod=='GET'">
            <p>{{ user.name }}</p>
          </template>
          <input v-else type="text" class="form-control" v-model="user.name" placeholder="이름을 입력해주세요">
        </div>
      </div>

      <div class="pack_div clearfix">
        <div class="div_left">
          <label>전화번호</label>
        </div>
        <div class="div_right">
          <template v-if="mod=='GET'">
            <p>{{ user.phone }}</p>
          </template>
          <input v-else type="text" class="form-control" v-model="user.phone" placeholder="전화번호를 입력해주세요">
        </div>
      </div>

      <div class="pack_div clearfix" v-if="user.is_student==1">
        <div class="div_left">
          <label>학번</label>
        </div>
        <div class="div_right">
          <template v-if="mod=='GET'">
            <p>{{ user.student_number }}</p>
          </template>
          <input v-else type="text" class="form-control" v-model="user.student_number" placeholder="학번을 입력해주세요">
        </div>
      </div>


      <div class="pack_div clearfix" v-if="mod!='POST'">
        <div class="div_left">
          <label>업데이트</label>
        </div>
        <div class="div_right">
          <p>{{user.datetime_last_updated}}</p>
        </div>
      </div>

      <div class="pack_div clearfix" v-if="mod!='POST'">
        <div class="div_left">
          <label>생성</label>
        </div>
        <div class="div_right">
          <p>{{user.datetime_created}}</p>
        </div>
      </div>

      
      <div class="single_button">
        <button type="button" class="btn btn-default" v-if="mod=='GET' && is_adminpage" @click="gotoRsvLookup(user.email, user.building_id)">예약목록</button>
        <button type="button" class="btn btn-warning" v-if="mod=='GET'" @click="setMod('PUT', $event)">수정</button>
        <button type="submit" class="btn btn-primary" v-if="mod=='PUT'">제출</button>
      </div>
    </div>
  </form>
</script>

<script type="text/javascript" src="/javascripts/validate.js"></script>
<script>
  Vue.component('user-input', {
    template: '#input-template',
    props: {
      is_adminpage: Boolean,
      mod: String,
      is_admin: Number,
      user: Object,
      department_results: Array,
      campus_results: Array,
      buildings: Object,
    },
    data: function () {
      return {
        building_results: this.buildings[this.user.campus_id],
      }
    }, 
    methods: {
      gotoRsvLookup: function(email) {
        var link = this.is_adminpage ? '/admin' : '/'
        link+= '/reservation/lookup?page=1&search_type=email&search_value=' + email;
        
        location.href= link
      },
      changeToUser: function(user) {
        if (user.user_type == global.USER_TYPE) {
          alert('이미 해당 권한입니다.')
        } else {
          this.chageUserType(user.user_id, global.USER_TYPE);
        }
      },
      changeToAdmin: function(user) {
        if (user.user_type == global.ADMIN_TYPE) {
          alert('이미 해당 권한입니다.')
        } else {
          this.chageUserType(user.user_id, global.ADMIN_TYPE);
        }
      },
      chageUserType: function(user_id, user_type) {
        global.ajax({
          url: '/api/user/user_type/' + user_id,
          type: 'PUT',
          data: {
            user_type: user_type,
          },
        },
        function (data, status) {
          alert(data.message);
          location.reload();
        },
        function (message, status, data) {
          alert(message);
        });
      },
      classIsPrimary: function(flag) {
        return {
          'btn btn-primary': flag,
          'btn btn-default': !flag,
        }
      },
      replaceBuildings: function (event) {
        this.building_results = this.buildings[this.user.campus_id];
        this.user.building_id = null;
      },
      setMod: function(mod, e) {
        if (e) {
          e.preventDefault();
        }
        this.mod = mod;
      },
      onSubmitForm: function(e) {
        var _validate = validate(this.user, {
          'campus_id': {
            is_require: true,
          },
          'building_id': {
            is_require: true,
          },
          'name': {
            is_require: true,
          },
          'is_student': {
            is_require: true,
          },
          'student_number': {
            is_require: this.user.is_student == 1 ? true : false,
          },
        });
        if (_validate) {
          alert(_validate);
        } else {
          var __this = this;
          var mod = this.mod;
          var url = '/api/user' + (mod == 'PUT' ? '/' + this.user.user_id : '');
          global.ajax({
            url: url,
            type: mod,
            data: this.user,
          },
          function (data, status) {
            alert(data.message);
            location.reload();
          },
          function (message, status, data) {
            alert(message);
          });
        }
      }
    },
  })
</script>